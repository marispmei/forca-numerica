$comment
	File created using the following command:
		vcd file forca.msim.vcd -direction
$end
$date
	Mon Feb 21 00:50:53 2022
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module forca_vhd_vec_tst $end
$var wire 1 ! HEX0 [6] $end
$var wire 1 " HEX0 [5] $end
$var wire 1 # HEX0 [4] $end
$var wire 1 $ HEX0 [3] $end
$var wire 1 % HEX0 [2] $end
$var wire 1 & HEX0 [1] $end
$var wire 1 ' HEX0 [0] $end
$var wire 1 ( HEX1 [6] $end
$var wire 1 ) HEX1 [5] $end
$var wire 1 * HEX1 [4] $end
$var wire 1 + HEX1 [3] $end
$var wire 1 , HEX1 [2] $end
$var wire 1 - HEX1 [1] $end
$var wire 1 . HEX1 [0] $end
$var wire 1 / HEX2 [6] $end
$var wire 1 0 HEX2 [5] $end
$var wire 1 1 HEX2 [4] $end
$var wire 1 2 HEX2 [3] $end
$var wire 1 3 HEX2 [2] $end
$var wire 1 4 HEX2 [1] $end
$var wire 1 5 HEX2 [0] $end
$var wire 1 6 HEX3 [6] $end
$var wire 1 7 HEX3 [5] $end
$var wire 1 8 HEX3 [4] $end
$var wire 1 9 HEX3 [3] $end
$var wire 1 : HEX3 [2] $end
$var wire 1 ; HEX3 [1] $end
$var wire 1 < HEX3 [0] $end
$var wire 1 = HEX4 [6] $end
$var wire 1 > HEX4 [5] $end
$var wire 1 ? HEX4 [4] $end
$var wire 1 @ HEX4 [3] $end
$var wire 1 A HEX4 [2] $end
$var wire 1 B HEX4 [1] $end
$var wire 1 C HEX4 [0] $end
$var wire 1 D HEX5 [6] $end
$var wire 1 E HEX5 [5] $end
$var wire 1 F HEX5 [4] $end
$var wire 1 G HEX5 [3] $end
$var wire 1 H HEX5 [2] $end
$var wire 1 I HEX5 [1] $end
$var wire 1 J HEX5 [0] $end
$var wire 1 K HEX6 [2] $end
$var wire 1 L HEX6 [1] $end
$var wire 1 M HEX6 [0] $end
$var wire 1 N V_SW [10] $end
$var wire 1 O V_SW [9] $end
$var wire 1 P V_SW [8] $end
$var wire 1 Q V_SW [7] $end
$var wire 1 R V_SW [6] $end
$var wire 1 S V_SW [5] $end
$var wire 1 T V_SW [4] $end
$var wire 1 U V_SW [3] $end
$var wire 1 V V_SW [2] $end
$var wire 1 W V_SW [1] $end
$var wire 1 X V_SW [0] $end

$scope module i1 $end
$var wire 1 Y gnd $end
$var wire 1 Z vcc $end
$var wire 1 [ unknown $end
$var wire 1 \ devoe $end
$var wire 1 ] devclrn $end
$var wire 1 ^ devpor $end
$var wire 1 _ ww_devoe $end
$var wire 1 ` ww_devclrn $end
$var wire 1 a ww_devpor $end
$var wire 1 b ww_V_SW [10] $end
$var wire 1 c ww_V_SW [9] $end
$var wire 1 d ww_V_SW [8] $end
$var wire 1 e ww_V_SW [7] $end
$var wire 1 f ww_V_SW [6] $end
$var wire 1 g ww_V_SW [5] $end
$var wire 1 h ww_V_SW [4] $end
$var wire 1 i ww_V_SW [3] $end
$var wire 1 j ww_V_SW [2] $end
$var wire 1 k ww_V_SW [1] $end
$var wire 1 l ww_V_SW [0] $end
$var wire 1 m ww_HEX5 [6] $end
$var wire 1 n ww_HEX5 [5] $end
$var wire 1 o ww_HEX5 [4] $end
$var wire 1 p ww_HEX5 [3] $end
$var wire 1 q ww_HEX5 [2] $end
$var wire 1 r ww_HEX5 [1] $end
$var wire 1 s ww_HEX5 [0] $end
$var wire 1 t ww_HEX4 [6] $end
$var wire 1 u ww_HEX4 [5] $end
$var wire 1 v ww_HEX4 [4] $end
$var wire 1 w ww_HEX4 [3] $end
$var wire 1 x ww_HEX4 [2] $end
$var wire 1 y ww_HEX4 [1] $end
$var wire 1 z ww_HEX4 [0] $end
$var wire 1 { ww_HEX3 [6] $end
$var wire 1 | ww_HEX3 [5] $end
$var wire 1 } ww_HEX3 [4] $end
$var wire 1 ~ ww_HEX3 [3] $end
$var wire 1 !! ww_HEX3 [2] $end
$var wire 1 "! ww_HEX3 [1] $end
$var wire 1 #! ww_HEX3 [0] $end
$var wire 1 $! ww_HEX2 [6] $end
$var wire 1 %! ww_HEX2 [5] $end
$var wire 1 &! ww_HEX2 [4] $end
$var wire 1 '! ww_HEX2 [3] $end
$var wire 1 (! ww_HEX2 [2] $end
$var wire 1 )! ww_HEX2 [1] $end
$var wire 1 *! ww_HEX2 [0] $end
$var wire 1 +! ww_HEX1 [6] $end
$var wire 1 ,! ww_HEX1 [5] $end
$var wire 1 -! ww_HEX1 [4] $end
$var wire 1 .! ww_HEX1 [3] $end
$var wire 1 /! ww_HEX1 [2] $end
$var wire 1 0! ww_HEX1 [1] $end
$var wire 1 1! ww_HEX1 [0] $end
$var wire 1 2! ww_HEX0 [6] $end
$var wire 1 3! ww_HEX0 [5] $end
$var wire 1 4! ww_HEX0 [4] $end
$var wire 1 5! ww_HEX0 [3] $end
$var wire 1 6! ww_HEX0 [2] $end
$var wire 1 7! ww_HEX0 [1] $end
$var wire 1 8! ww_HEX0 [0] $end
$var wire 1 9! ww_HEX6 [2] $end
$var wire 1 :! ww_HEX6 [1] $end
$var wire 1 ;! ww_HEX6 [0] $end
$var wire 1 <! \HEX5[0]~output_o\ $end
$var wire 1 =! \HEX5[1]~output_o\ $end
$var wire 1 >! \HEX5[2]~output_o\ $end
$var wire 1 ?! \HEX5[3]~output_o\ $end
$var wire 1 @! \HEX5[4]~output_o\ $end
$var wire 1 A! \HEX5[5]~output_o\ $end
$var wire 1 B! \HEX5[6]~output_o\ $end
$var wire 1 C! \HEX4[0]~output_o\ $end
$var wire 1 D! \HEX4[1]~output_o\ $end
$var wire 1 E! \HEX4[2]~output_o\ $end
$var wire 1 F! \HEX4[3]~output_o\ $end
$var wire 1 G! \HEX4[4]~output_o\ $end
$var wire 1 H! \HEX4[5]~output_o\ $end
$var wire 1 I! \HEX4[6]~output_o\ $end
$var wire 1 J! \HEX3[0]~output_o\ $end
$var wire 1 K! \HEX3[1]~output_o\ $end
$var wire 1 L! \HEX3[2]~output_o\ $end
$var wire 1 M! \HEX3[3]~output_o\ $end
$var wire 1 N! \HEX3[4]~output_o\ $end
$var wire 1 O! \HEX3[5]~output_o\ $end
$var wire 1 P! \HEX3[6]~output_o\ $end
$var wire 1 Q! \HEX2[0]~output_o\ $end
$var wire 1 R! \HEX2[1]~output_o\ $end
$var wire 1 S! \HEX2[2]~output_o\ $end
$var wire 1 T! \HEX2[3]~output_o\ $end
$var wire 1 U! \HEX2[4]~output_o\ $end
$var wire 1 V! \HEX2[5]~output_o\ $end
$var wire 1 W! \HEX2[6]~output_o\ $end
$var wire 1 X! \HEX1[0]~output_o\ $end
$var wire 1 Y! \HEX1[1]~output_o\ $end
$var wire 1 Z! \HEX1[2]~output_o\ $end
$var wire 1 [! \HEX1[3]~output_o\ $end
$var wire 1 \! \HEX1[4]~output_o\ $end
$var wire 1 ]! \HEX1[5]~output_o\ $end
$var wire 1 ^! \HEX1[6]~output_o\ $end
$var wire 1 _! \HEX0[0]~output_o\ $end
$var wire 1 `! \HEX0[1]~output_o\ $end
$var wire 1 a! \HEX0[2]~output_o\ $end
$var wire 1 b! \HEX0[3]~output_o\ $end
$var wire 1 c! \HEX0[4]~output_o\ $end
$var wire 1 d! \HEX0[5]~output_o\ $end
$var wire 1 e! \HEX0[6]~output_o\ $end
$var wire 1 f! \HEX6[0]~output_o\ $end
$var wire 1 g! \HEX6[1]~output_o\ $end
$var wire 1 h! \HEX6[2]~output_o\ $end
$var wire 1 i! \V_SW[10]~input_o\ $end
$var wire 1 j! \V_SW[4]~input_o\ $end
$var wire 1 k! \V_SW[8]~input_o\ $end
$var wire 1 l! \V_SW[6]~input_o\ $end
$var wire 1 m! \V_SW[1]~input_o\ $end
$var wire 1 n! \out_main|process_0~1_combout\ $end
$var wire 1 o! \V_SW[7]~input_o\ $end
$var wire 1 p! \V_SW[3]~input_o\ $end
$var wire 1 q! \V_SW[9]~input_o\ $end
$var wire 1 r! \out_main|Add1~0_combout\ $end
$var wire 1 s! \V_SW[2]~input_o\ $end
$var wire 1 t! \V_SW[0]~input_o\ $end
$var wire 1 u! \out_main|process_0~2_combout\ $end
$var wire 1 v! \out_main|Add1~1_combout\ $end
$var wire 1 w! \V_SW[5]~input_o\ $end
$var wire 1 x! \out_main|process_0~0_combout\ $end
$var wire 1 y! \out_main|process_0~3_combout\ $end
$var wire 1 z! \out_main|Equal0~0_combout\ $end
$var wire 1 {! \out_decod_5|Mux6~0_combout\ $end
$var wire 1 |! \out_decod_5|Mux5~0_combout\ $end
$var wire 1 }! \out_decod_5|Mux4~0_combout\ $end
$var wire 1 ~! \out_decod_5|Mux3~0_combout\ $end
$var wire 1 !" \out_decod_5|Mux2~0_combout\ $end
$var wire 1 "" \out_decod_5|Mux0~0_combout\ $end
$var wire 1 #" \out_decod_4|Mux6~0_combout\ $end
$var wire 1 $" \out_decod_4|Mux5~0_combout\ $end
$var wire 1 %" \out_main|digito_5[1]~0_combout\ $end
$var wire 1 &" \out_decod_3|Mux6~0_combout\ $end
$var wire 1 '" \out_decod_3|Mux5~0_combout\ $end
$var wire 1 (" \out_decod_3|Mux5~1_combout\ $end
$var wire 1 )" \out_main|contador_vidas~0_combout\ $end
$var wire 1 *" \out_main|contador_vidas~1_combout\ $end
$var wire 1 +" \out_decod_3|Mux0~0_combout\ $end
$var wire 1 ," \out_decod_2|Mux6~0_combout\ $end
$var wire 1 -" \out_decod_2|Mux5~0_combout\ $end
$var wire 1 ." \out_main|digito_3[1]~0_combout\ $end
$var wire 1 /" \out_decod_1|Mux6~0_combout\ $end
$var wire 1 0" \out_decod_1|Mux5~0_combout\ $end
$var wire 1 1" \out_main|digito_2[2]~0_combout\ $end
$var wire 1 2" \out_decod_1|Mux3~0_combout\ $end
$var wire 1 3" \out_decod_1|Mux2~0_combout\ $end
$var wire 1 4" \out_decod_0|Mux6~0_combout\ $end
$var wire 1 5" \out_main|digito_1[0]~0_combout\ $end
$var wire 1 6" \out_decod_0|Mux4~0_combout\ $end
$var wire 1 7" \out_main|Mux1~0_combout\ $end
$var wire 1 8" \out_main|vidas[1]~0_combout\ $end
$var wire 1 9" \out_main|Mux1~1_combout\ $end
$var wire 1 :" \out_main|ALT_INV_Mux1~1_combout\ $end
$var wire 1 ;" \out_decod_0|ALT_INV_Mux4~0_combout\ $end
$var wire 1 <" \out_decod_0|ALT_INV_Mux6~0_combout\ $end
$var wire 1 =" \out_main|ALT_INV_digito_2[2]~0_combout\ $end
$var wire 1 >" \out_decod_1|ALT_INV_Mux6~0_combout\ $end
$var wire 1 ?" \out_main|ALT_INV_digito_3[1]~0_combout\ $end
$var wire 1 @" \out_decod_2|ALT_INV_Mux6~0_combout\ $end
$var wire 1 A" \out_decod_3|ALT_INV_Mux6~0_combout\ $end
$var wire 1 B" \out_main|ALT_INV_digito_5[1]~0_combout\ $end
$var wire 1 C" \out_decod_4|ALT_INV_Mux5~0_combout\ $end
$var wire 1 D" \out_decod_4|ALT_INV_Mux6~0_combout\ $end
$var wire 1 E" \out_decod_5|ALT_INV_Mux0~0_combout\ $end
$var wire 1 F" \out_decod_5|ALT_INV_Mux2~0_combout\ $end
$var wire 1 G" \out_decod_5|ALT_INV_Mux3~0_combout\ $end
$var wire 1 H" \out_decod_5|ALT_INV_Mux5~0_combout\ $end
$var wire 1 I" \out_decod_5|ALT_INV_Mux6~0_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Y
1Z
x[
1\
1]
1^
1_
1`
1a
1<!
1=!
0>!
0?!
1@!
1A!
1B!
1C!
1D!
0E!
0F!
1G!
1H!
1I!
1J!
1K!
0L!
0M!
1N!
1O!
1P!
1Q!
1R!
0S!
0T!
1U!
1V!
1W!
1X!
1Y!
0Z!
0[!
1\!
1]!
1^!
1_!
1`!
0a!
0b!
1c!
1d!
1e!
0f!
0g!
0h!
0i!
0j!
1k!
1l!
1m!
0n!
0o!
1p!
1q!
0r!
0s!
0t!
0u!
1v!
0w!
1x!
0y!
1z!
0{!
0|!
0}!
1~!
0!"
0""
0#"
0$"
1%"
0&"
1'"
0("
1)"
0*"
1+"
0,"
1-"
1."
0/"
10"
11"
02"
13"
04"
15"
16"
07"
08"
19"
0:"
0;"
1<"
0="
1>"
0?"
1@"
1A"
0B"
1C"
1D"
1E"
1F"
0G"
1H"
1I"
0N
1O
1P
0Q
1R
0S
0T
1U
0V
1W
0X
0b
1c
1d
0e
1f
0g
0h
1i
0j
1k
0l
1m
1n
1o
0p
0q
1r
1s
1t
1u
1v
0w
0x
1y
1z
1{
1|
1}
0~
0!!
1"!
1#!
1$!
1%!
1&!
0'!
0(!
1)!
1*!
1+!
1,!
1-!
0.!
0/!
10!
11!
12!
13!
14!
05!
06!
17!
18!
09!
0:!
0;!
1!
1"
1#
0$
0%
1&
1'
1(
1)
1*
0+
0,
1-
1.
1/
10
11
02
03
14
15
16
17
18
09
0:
1;
1<
1=
1>
1?
0@
0A
1B
1C
1D
1E
1F
0G
0H
1I
1J
0K
0L
0M
$end
#500000
